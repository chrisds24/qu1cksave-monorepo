{
  "name": "qu1cksave-backend",
  "version": "1.0.0",
  "devDependencies": {
    "@types/bcrypt": "*",
    "@types/cors": "*",
    "@types/express": "*",
    "@types/jest": "*",
    "@types/jsonwebtoken": "*",
    "@types/node": "*",
    "@types/pg": "*",
    "@types/supertest": "*",
    "@types/swagger-ui-express": "*",
    "@typescript-eslint/eslint-plugin": "^5.52.0",
    "@typescript-eslint/parser": "^5.52.0",
    "concurrently": "*",
    "eslint": "8.36.0",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^8.6.0",
    "jest": "*",
    "nodemon": "*",
    "supertest": "*",
    "ts-jest": "*",
    "ts-node": "*",
    "ts-postgres": "*",
    "typescript": "*",
    "whatwg-fetch": "*"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.598.0",
    "@aws-sdk/s3-request-presigner": "^3.600.0",
    "@hapi/joi": "^17.1.1",
    "bcrypt": "*",
    "cors": "*",
    "dotenv": "*",
    "express": "*",
    "jest-fetch-mock": "^3.0.3",
    "jsonwebtoken": "*",
    "pg": "*",
    "swagger-ui-express": "*",
    "tsoa": "*"
  },
  "scripts": {
    "dev": "concurrently \"nodemon -q\" \"nodemon -q -x tsoa spec-and-routes\"",
    "test": "jest --runInBand --coverage --verbose --no-cache --forceExit",
    "lint": "eslint ./src/**/*.[jt]s --fix",
    "pretest": "npm run swagger",
    "start": "node build/src/server.js",
    "prebuild": "npm run swagger",
    "build": "tsc",
    "swagger": "tsoa spec-and-routes",
    "predev": "npm run swagger",
    "check-types": "tsc --noEmit",
    "dev-backend": "docker-compose up -d && npm run dev"
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts",
    "exec": "ts-node src/server.ts"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testTimeout": 500,
    "collectCoverageFrom": [
      "src/**/*.[jt]s"
    ],
    "coveragePathIgnorePatterns": [
      "src/server.[jt]s"
    ],
    "testMatch": [
      "**/?(*.)+(spec|test).[jt]s?(x)"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/build"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    }
  }
}
